# >_ <- условное обозначение начала комментакия (нигде больше не применяется, использую просто для удобства)

# >_ подключение библиотеки компьютерного зрения
import cv2

# >_ объявляем индификатор камеры ( подключаем камеру к проекту)
# >_ ВАЖНО! чтобы камера была свободна (все приложения, использующие камеру, должны быть закрыты)
cap = cv2.VideoCapture( 0 )


# запускаем бесконечный цикл
while True:
    # >_ считываем изображение с камеры с помощью вункции read , обращаясь через
    #      индификатор камеры cap 
    # >_ в переменную rt записывается True, если считать удалось, и
    #      False, если по какой-то причине изображение считать не удалось (в проекте не используется)
    # >_ в переменную frame записывается значение нашего кадра в виде массива numpy
    ret, frame = cap.read()

    # >_ показываем кадр frame, взятый с камеры, до изменения
    cv2.imshow( 'main before change', frame )

    # >_ обращаемся к нашему кадру frame как к массиву
    #      frame Является трёхмерным массивом, где первые две оси это 
    #      позиция пикселя по координатам X, Y
    #      причем первой является Y, а второй X
    #      Третья ось С отвечает за цвет по пространству BGR (blue - синий, green - зелёный, red - красный )
    #      Если брать изображение со стандартной камеры, то:
    #      значения оси Y могут быть в диапазоне от 0 до 479
    #      значения оси X могут быть в диапазоне от 0 до 639
    #      значения оси цвета C  могут быть в диапазоне от 0 до 2, где
    #       0 - это синий, 
    #       1 - это зелёный,
    #       2 - это красный
    # 
    #      мы можем обратиться к конкретной точке, например:
    #   frame [100, 200, 1] = 0      
    #
    #      этим мы скажем точке по координате Y = 100, X = 200 полностью убрать зелёный цвет (C = 1)
    #      Но это не всегда удобно
    # 
    #      Мы обращаемся к нашему массиву через промежутки ( в  python они называются срезы )
    # 
    #      Общий вид среза:
    #    от : до : шаг
    #    

        #  Y       X   C
    frame[ 200:, :200, 0 ] = 0 # создаёт желтый прямоугольник
    frame[ 100:, :100, 2 ] = 0 # создаёт голубой прямоугольник
    # на их пересечении образуется зелёный прямоугольник
    
    
    frame[ 100:350:4 , 300:550, 0:2 ] = 0 # создаёт прямоугольник в красную полоску
    # здесь от 100 до 350 по Y c шагом в 4
    # от 300 до 550 по X
    # от 0 до 2 по цвету (не включая 2, т.е. только 0 и 1, оно же синий и зелёный)

    # >_ показываем кадр frame, взятый с камеры, после изменения изменения
    cv2.imshow( 'main after change', frame )

    # >_ условие прерывания
    #     По нажатию на кнопку 'q' на клавиатуре завершается работа программы
    if cv2.waitKey( 1 ) == ord( 'q' ):
        break


# >_ завершение работы с камерой
#     Нужно для освобождения камеры для других приложений
cap.release()

# >_ закрытие всех созданных окон
cv2.destroyAllWindows()
